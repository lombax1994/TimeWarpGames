@using System.Web.DynamicData
@using TimeWarpGames.Entities
@model TimeWarpGames.Entities.Console

<!-- Foutmeldingen tonen -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

@{
    ViewBag.Title = "Console Details";  // Titel van de pagina
}

<div class="container mt-5">
    <div class="card shadow rounded-4 p-4">
        <div class="row g-4">
            <!-- Left: Console Image -->
            <div class="col-md-4 text-center">
                <!-- Console afbeelding tonen -->
                <img src="~/Content/Images/ConsolePics/@Model.Image" alt="@Model.Name" class="img-fluid rounded shadow-sm" style="max-height: 300px; object-fit:contain" />
            </div>

            <!-- Right: Console Details -->
            <div class="col-md-8 d-flex flex-column justify-content-between">
                <div>
                    <!-- Naam van de console -->
                    <h2 class="fw-bold text-light">@Model.Name</h2>

                    <!-- Beschrijving van de console -->
                    <p class="text-secondary small mb-4">@Model.Description</p>

                    <!-- Merk en Model -->
                    <div class="row mb-3">
                        <div class="col-sm-6">
                            <strong>Brand:</strong> @Html.DisplayFor(m => m.Brand)
                        </div>
                        <div class="col-sm-6">
                            <strong>Model:</strong> @Html.DisplayFor(m => m.Model)
                        </div>
                    </div>

                    <!-- Staat en of het in de doos zit -->
                    <div class="row mb-3">
                        <div class="col-sm-6">
                            <strong>State:</strong> @Model.State.ToString()
                        </div>
                        <div class="col-sm-6">
                            <strong>Boxed:</strong> @Html.DisplayFor(m => m.IsBoxed)
                        </div>
                    </div>

                    <!-- Release Date -->
                    <div class="mb-3">
                        <strong>Release Date:</strong> @Model.ReleaseDate.ToString("yyyy-MM-dd")
                    </div>

                    <!-- Prijs van de console -->
                    <div class="mb-4">
                        <span class="fs-4 fw-bold">@Html.DisplayFor(m => m.Price)</span>
                    </div>

                    <!-- Voorraad -->
                    <div class="mb-3">
                        <strong>Voorraad:</strong> @ViewBag.ActueleVoorraad
                    </div>
                </div>

                <!-- Bottom Right Add to Cart Button -->
                <!-- Alleen zichtbaar als de gebruiker is ingelogd -->
                @if (User.Identity.IsAuthenticated && !User.IsInRole("StoreManager") && !User.IsInRole("SuperAdmin"))
                {
                    <div class="d-flex justify-content-end">
                        <!-- Formulier om het product toe te voegen aan de winkelwagen -->
                        <form id="addToCart" action="@Url.Action("Add", "ShoppingCart")" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@Model.ProductId" />
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="bi bi-cart-plus me-1"></i> Add to Cart
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>


    <!-- Navigatieknoppen onderaan de pagina -->
    <!-- Alleen zichtbaar voor StoreManager (indien ingelogd met de juiste rol) -->
    <div class="mt-4">
        @if (User.IsInRole("StoreManager"))
        {
            <!-- Link om het product te bewerken (alleen voor StoreManager) -->
            @Html.ActionLink("Edit", "Edit", new { id = Model.ProductId }, new { @class = "btn btn-light me-2" })
        }

        <!-- Link om terug te gaan naar de productlijst -->
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light" })
    </div>
</div>

<!-- Reviews sectie -->
@if (ViewBag.Reviews != null && ((List<Review>)ViewBag.Reviews).Count > 0)
{
    <h3 class="mt-5 mb-4 text-light">Reviews</h3>
    <div class="row g-4">
        @foreach (var review in (List<Review>)ViewBag.Reviews)
        {
            <div class="col-md-6">
                <div class="card shadow-sm p-3 h-100">
                    <div class="card-body">
                        <h5 class="card-title">@review.UserName had dit te vertellen over dit product:</h5>
                        <p class="card-text">@review.Comment</p>
                        <p class="card-text"><small class="text-primary">Score: @review.Rating/5</small></p>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-light mt-5">Er zijn nog geen reviews voor dit product.</p>
}

<!-- Review invoer card (alleen zichtbaar voor ingelogde gebruikers) -->
@if (User.Identity.IsAuthenticated)
{
    <div class="card shadow-sm rounded-4 p-4 mt-5 mb-5" style="max-width: 600px;">
        <h4 class="mb-4 text-light">Schrijf een review</h4>
        <form method="post" action="@Url.Action("AddReview", "Consoles")">
            @Html.AntiForgeryToken()
            <input type="hidden" name="productId" value="@Model.ProductId" />

            <div class="mb-3">
                <label for="comment" class="form-label text-light">Review:</label>
                <textarea class="form-control" id="comment" name="comment" rows="4" required></textarea>
            </div>

            <div class="mb-3">
                <label for="rating" class="form-label text-light">Beoordeling:</label>
                <select class="form-select" id="rating" name="rating" required>
                    <option value="">Selecteer beoordeling</option>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Review toevoegen</button>
        </form>
    </div>
}
else
{
    <p class="text-muted mt-5">Log in om een review toe te voegen.</p>
}










<!-- Add to Cart Confirmation Modal -->
<div class="modal fade" id="addToCartModal" tabindex="-1" aria-labelledby="addToCartModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4">
            <div class="modal-header">
                <h5 class="modal-title" id="addToCartModalLabel">Toegevoegd aan winkelmandje</h5>
            </div>
            <div class="modal-body text-center">
                <a href="@Url.Action("Index", "ShoppingCart")" class="btn btn-primary">Winkelmandje bekijken</a>
            </div>
            <div class="modal-footer justify-content-center">
                <p>Klik buiten dit vak om verder te winkelen.</p>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.getElementById("addToCart").addEventListener("submit", function (e) {
            e.preventDefault();

            const form = this;
            const formData = new FormData(form);

            fetch(form.action, {
                method: "POST",
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const modal = new bootstrap.Modal(document.getElementById('addToCartModal'));
                        modal.show();
                    } else {
                        alert(data.message || "Kan niet toevoegen aan winkelmandje.");
                    }
                })
                .catch(error => {
                    console.error("Fout:", error);
                    alert("Technische fout bij het toevoegen aan winkelmandje.");
                });
        });

        // Handmatig modal sluiten bij Verder winkelen knop
        document.querySelector('.btn-secondary[data-bs-dismiss="modal"]').addEventListener('click', function () {
            var modalElement = document.getElementById('addToCartModal');
            var modal = bootstrap.Modal.getInstance(modalElement);
            if (!modal) {
                modal = new bootstrap.Modal(modalElement);
            }
            modal.hide();
        });
    </script>
}
